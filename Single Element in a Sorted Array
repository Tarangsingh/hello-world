class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int sz=nums.size();
        if(sz==1)
            return nums[0];
        int lo=0,hh=nums.size()-1,mid;
        while(lo<=hh)
        {
            mid=lo+((hh-lo)/2);
            if((mid!=0)&&(mid!=(sz-1))&&(nums[mid]!=nums[mid-1])&&(nums[mid]!=nums[mid+1]))
            {
                return nums[mid];
            }
            else if((mid==0)&&(nums[mid]!=nums[mid+1]))
            {
                return nums[mid];
            }
            else if((mid==(sz-1))&&(nums[mid]!=nums[mid-1]))
                return nums[mid];
            else if((mid!=0)&&(nums[mid]==nums[mid-1]))
            {
                if(mid%2==0)
                    hh=mid-2;
                else
                    lo=mid+1;
            }
            else if((mid!=(sz-1))&&(nums[mid]==nums[mid+1]))
            {
                if(mid%2==0)
                    lo=mid+2;
                else
                    hh=mid-1;
            }
        }
        return -1;
    }
};
